//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM  1
#define NAV  2
#define SYM  3
#define FUN  4
#define BLE  5

// HYPER AND MEH
#define HYPER LG(LA(LS(LCTRL)))
#define MEH LA(LS(LCTRL))

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

&lt {
 quick-tap-ms = <200>;
};

&caps_word {
 continue-list = <UNDERSCORE MINUS BSPC>;
};

/ {
    behaviors {
        comma_colon: comma_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_semi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lt_meh_comma_colon: lt_meh_comma_colon {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&comma_colon>;

            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
label= "BASE"                              ;
 bindings = <
                &kp Q           &kp W           &mt HYPER F     &kp P           &kp B               &kp J       &kp L              &mt HYPER U                     &kp Y           &kp SQT
                &mt LCTRL A     &mt LALT R      &mt LGUI S      &mt LSHFT T     &kp G               &kp M       &mt RSHFT N        &mt RGUI E                      &mt RALT I      &mt RCTRL O
    &mo BLE     &kp Z           &kp X           &mt MEH C       &kp D           &kp V               &kp K       &kp H              &lt_meh_comma_colon MEH 0       &dot_semi       &kp MINUS    &trans
                                                &lt NUM ESC     &lt NAV SPACE   &lt FUN TAB         &kp RET     &lt SYM BSPC       &kp FSLH
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                num_layer {
label= "NUM"                              ;
 bindings = <
                &trans      &trans      &kp HYPER    &trans      &trans          &trans      &kp N7       &kp N8       &kp N9      &kp C_VOL_UP
                &kp LCTRL   &kp LALT    &kp LGUI     &kp LSHFT   &trans          &trans      &kp N4       &kp N5       &kp N6      &kp C_VOL_DN
    &trans      &trans      &trans      &kp MEH      &trans      &trans          &kp N0      &kp N1       &kp N2       &kp N3      &kp C_MUTE      &trans
                                        &trans       &kp SPACE   &kp TAB         &kp RET     &kp BSPC     &kp FSLH
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                nav_layer {
label= "NAV"                              ;
 bindings = <
                &trans      &trans      &kp HYPER   &trans      &trans          &kp CAPSLOCK    &kp LEFT_BRACE      &kp RIGHT_BRACE      &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS
                &kp LCTRL   &kp LALT    &kp LGUI    &kp LSHFT   &trans          &caps_word      &kp LEFT            &kp DOWN             &kp UP                    &kp RIGHT
    &trans      &trans      &trans      &kp MEH     &trans      &trans          &trans          &kp LEFT_BRACKET    &kp RIGHT_BRACKET    &kp LESS_THAN             &kp GREATER_THAN           &trans
                                        &kp ESC     &trans      &kp TAB         &kp RET         &kp BSPC            &kp FSLH
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                sym_layer {
label= "SYM"                               ;
 bindings = <
                &kp TILDE       &kp EXCLAMATION         &kp AT_SIGN     &kp HASH        &kp DOLLAR                    &trans                   &trans                   &kp HYPER                &trans                  &trans
                &kp PIPE        &kp BACKSLASH           &kp PLUS        &kp EQUAL       &kp QUESTION                  &trans                   &kp RSHFT                &kp RGUI                 &kp RALT                &kp RCTRL
     &trans     &kp GRAVE       &kp PERCENT             &kp CARET       &kp AMPERSAND   &kp ASTERISK                  &trans                   &trans                   &kp MEH                  &trans                  &trans         &trans
                                                        &kp ESC         &kp SPACE       &kp TAB                       &kp RET                  &trans                   &kp FSLH
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                fun_layer {
label= "FUN"                              ;
 bindings = <
                &trans      &trans      &kp HYPER    &trans      &trans          &trans      &kp F7       &kp F8       &kp F9      &kp F10
                &kp LCTRL   &kp LALT    &kp LGUI     &kp LSHFT   &trans          &trans      &kp F4       &kp F5       &kp F6      &kp F11
    &trans      &trans      &trans      &kp MEH      &trans      &trans          &trans      &kp F1       &kp F2       &kp F3      &kp F12     &trans
                                        &kp ESC      &kp SPACE   &trans          &kp RET     &kp BSPC     &kp FSLH
                        >;
                };
                
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                ble_layer {
label= "BLE"                               ;
 bindings = <
                &trans          &trans          &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans
                &bt BT_CLR      &trans          &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans
    &trans      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans        &trans        &trans              &trans  &trans  &trans      
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        };
};
